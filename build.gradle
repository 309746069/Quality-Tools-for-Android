import com.android.build.gradle.api.TestVariant

buildscript {
	repositories { 
         mavenCentral()
         maven {
	        url "https://oss.sonatype.org/content/repositories/snapshots"
	    }
	}
	dependencies { 
		classpath 'com.android.tools.build:gradle:0.5.6'
		classpath 'com.novoda.gradle:robolectric-plugin:0.0.1-SNAPSHOT'
	}
}

configure(allprojects) {
	group = 'com.octo.android'

	ext.androidVersion           = "4.1.1.4"
	ext.androidSupportVersion    = "18.0.0"
	ext.jodaLibraryVersion    = "2.2"

}

configure(subprojects) { subproject ->

	repositories {
	     mavenCentral()
	     mavenLocal()
	}

}

//-------------------------
//-- Android Sample Project
//-------------------------

project('android-sample') {
	description = "Android sample app under tests"

	apply plugin: 'android'
	apply plugin: 'eclipse'
	apply from: '../checkstyle.gradle'
	apply from: '../findbugs.gradle'

    checkstyle {
       configFile file('../checkstyle.xml')
       ignoreFailures true
       showViolations false
       xslFile null
    }
    
     findbugs {
       excludeFile file('../findbugs-filter.xml')
	   ignoreFailures true
       xslFile null
	}
 
	
	dependencies {
     compile "joda-time:joda-time:$jodaLibraryVersion"
     compile "com.android.support:support-v4:$androidSupportVersion"
     
     instrumentTestCompile 'com.jayway.android.robotium:robotium-solo:4.0'
     instrumentTestCompile 'org.hamcrest:hamcrest-core:1.3'
     //due to a stupid conflict with licence file TODO
     //instrumentTestCompile 'org.mockito:mockito-core:1.9.5'  
     instrumentTestCompile 'com.squareup.spoon:spoon-client:1.0.1'
     instrumentTestCompile 'com.squareup:fest-android:1.0.3'
     instrumentTestCompile 'org.easymock:easymock:3.2' exclude group: 'cglib'
     instrumentTestCompile 'cglib:cglib-nodep:2.2' 
	}
	    
	  
	android {
	    buildToolsVersion "17.0"                
	    compileSdkVersion 17
	    
	    sourceSets {
	        main {
	            manifest.srcFile 'AndroidManifest.xml'
	            java.srcDirs = ['src/main/java']
	            resources.srcDirs = ['src']
	            //aild.srcDirs = ['src']
	            renderscript.srcDirs = ['src']
	            res.srcDirs = ['res']
	            assets.srcDirs = ['assets']
	        }
	    
	        instrumentTest.setRoot('../android-sample-tests')
	        instrumentTest {
		      java {
		         srcDirs = ['../android-sample-tests/src/main/java']
		         //due to a stupid conflict with licence file TODO
		         exclude '**/HelloAndroidActivityTest.java'
		      }
		      res.srcDirs = ['res']
		      assets.srcDirs = ['../android-sample-tests/assets']
		      resources.srcDirs = ['../android-sample-tests/src']
		    }
	    }
	    
	    defaultConfig {
	        testPackageName "com.octo.android.sample.test"
	        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    	}

	    android.applicationVariants.each { variant ->
	        variant.install.doLast {
	            def result = exec {
	                executable = 'adb'
	                args = ['shell', 'am', 'start', '-c', 'android.intent.category.LAUNCHER', '-n', 'com.octo.android.sample/.ui.HelloAndroidActivity']
	            }
	        }
	    }
	}
}

//-------------------------
//-- Android Sample Robolectric Tests Project
//-------------------------

project('android-sample-robolectric-tests') {
	description = "Android sample app under tests"

	apply plugin: 'android'
	apply plugin: 'robolectric'
	
	repositories {
	    mavenCentral()
	    mavenLocal()
	    maven {
	        url "https://oss.sonatype.org/content/repositories/snapshots"
	    }
	}
	
	dependencies {
	    //compile files('libs/android-support-v4.jar')
	
	    // had to deploy to sonatype to get AAR to work
	    compile 'com.novoda:actionbarsherlock:4.3.2-SNAPSHOT' exclude group: 'com.google.android'
	    compile "joda-time:joda-time:$jodaLibraryVersion"
    	compile "com.android.support:support-v4:$androidSupportVersion"
	
	    robolectricCompile 'org.robolectric:robolectric:2.0'
	    robolectricCompile group: 'junit', name: 'junit', version: '4.+'
	    robolectricCompile "joda-time:joda-time:$jodaLibraryVersion"
	    robolectricCompile 'org.mockito:mockito-core:1.9.5'
	    robolectricCompile 'org.easymock:easymock:3.2' exclude group: 'cglib'
     	robolectricCompile 'cglib:cglib-nodep:2.2' 
	}
	
	android {
	    compileSdkVersion 17
	    buildToolsVersion "17.0.0"
	
		sourceSets {
	        main {
	            manifest.srcFile '../android-sample/AndroidManifest.xml'
	            java.srcDirs = ['../android-sample/src/main/java']
	            resources.srcDirs = ['../android-sample/src']
	            //aild.srcDirs = ['src']
	            renderscript.srcDirs = ['src']
	            res.srcDirs = ['../android-sample/res']
	            assets.srcDirs = ['../android-sample/assets']
	        }
	        
	        robolectric {
	            manifest.srcFile 'android-sample/AndroidManifest.xml'
		        java.srcDirs = ['src/test/java']
		        resources.srcDirs = ['src/test/resources']
	            res.srcDirs = ['../android-sample/res']
	            assets.srcDirs = ['../android-sample/assets']
		    }
	    }
	    
	    defaultConfig {
	        minSdkVersion 7
	        targetSdkVersion 17
	    }
	}
	
	task listResources << {
	    println android.sourceSets.robolectric.resources.srcDirs.each() {
	        println it.getProperties()
	    }
	
	}
	
	task listAndroidJars << {
	    println android.applicationVariants.each {
	        println it
	    }
	
	    println android.plugin.getRuntimeJarList()
	}
	
	task listJars << {
	    configurations.robolectric.each { File file -> println file.name }
	}
	
	task libs(type: Sync) {
	    from configurations.robolectric
	    into "/tmp/libs"
	}

    task(copy, type: Copy) {
	    from(file('src/test/resources'))
    	into(file('build/classes/robolectric/'))
	}
	
	tasks['robolectric'].dependsOn('copy')
	
	tasks['robolectric'].doFirst {
	  workingDir = '.'
	}
}

//-------------------------
//-- Root project
//-------------------------

configure(rootProject) {
	description = 'Quality Analysis Tools for Android'

}

